// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      forwardedRef={[Function]}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="MockedScreen"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": undefined,
              "flex": 1,
              "padding": 20,
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            editable={false}
            onChangeText={[Function]}
            rejectResponderTermination={true}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "paddingVertical": 10,
                },
                Object {
                  "borderColor": undefined,
                  "color": "#000",
                },
              ]
            }
            underlineColorAndroid="transparent"
            value=""
          />
          <TextInput
            allowFontScaling={true}
            editable={false}
            multiline={true}
            numberOfLines={15}
            onChangeText={[Function]}
            rejectResponderTermination={true}
            scrollEnabled={true}
            style={
              Array [
                Object {
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "marginTop": 20,
                  "paddingHorizontal": 5,
                  "paddingVertical": 15,
                },
                Object {
                  "borderColor": undefined,
                  "color": "#000",
                },
              ]
            }
            textAlignVertical="top"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              }
            }
          >
            <View />
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 10,
                    "flexDirection": "row",
                    "marginBottom": 10,
                    "marginTop": 30,
                    "paddingHorizontal": 15,
                    "paddingVertical": 10,
                  },
                  Object {
                    "backgroundColor": "#fff",
                  },
                ]
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "marginRight": 20,
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                      },
                      Array [
                        Object {
                          "fontSize": 12,
                          "marginTop": 5,
                        },
                        Object {
                          "color": "#000",
                        },
                      ],
                    ]
                  }
                >
                  Edit
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text />
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#000",
                      },
                      Object {
                        "fontSize": 12,
                        "marginTop": 5,
                      },
                    ]
                  }
                >
                  Delete
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
